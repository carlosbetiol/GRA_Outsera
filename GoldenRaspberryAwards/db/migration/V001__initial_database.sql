drop table if exists movie cascade;
drop table if exists movie_award cascade;
drop table if exists movie_producer cascade;
drop table if exists movie_studio cascade;
drop table if exists persistence_log cascade;
drop table if exists producer cascade;
drop table if exists request_log cascade;
drop table if exists studio cascade;
drop table if exists sys_user cascade;

create table movie
(
    created_at timestamp(6) with time zone not null,
    id         bigint generated by default as identity,
    updated_at timestamp(6) with time zone not null,
    name       varchar(150)                not null,
    primary key (id)
);

create table movie_award
(
    award_year integer                     not null,
    created_at timestamp(6) with time zone not null,
    id         bigint generated by default as identity,
    movie_id   bigint,
    updated_at timestamp(6) with time zone not null,
    primary key (id)
);

create table movie_producer
(
    movie_id    bigint not null,
    producer_id bigint not null,
    primary key (movie_id, producer_id)
);

create table movie_studio
(
    movie_id  bigint not null,
    studio_id bigint not null,
    primary key (movie_id, studio_id)
);

create table persistence_log
(
    created_at   timestamp(6) with time zone not null,
    entity_id    bigint                      not null,
    id           bigint generated by default as identity,
    user_id      bigint                      not null,
    entity_name  varchar(40)                 not null,
    json_content json                        not null,
    request_uuid varchar(40),
    action       enum ('CREATE','DELETE','GET','PATCH','UPDATE'),
    primary key (id)
);

create table producer
(
    created_at timestamp(6) with time zone not null,
    id         bigint generated by default as identity,
    updated_at timestamp(6) with time zone not null,
    name       varchar(150)                not null,
    primary key (id)
);

create table request_log
(
    response_status    integer,
    created_at         timestamp(6) with time zone not null,
    id                 bigint generated by default as identity,
    request_time       timestamp(6) with time zone not null,
    response_time      timestamp(6) with time zone not null,
    user_id            bigint                      not null,
    api_url            varchar(255)                not null,
    method             varchar(10)                 not null,
    request_content    json,
    request_dto        varchar(50),
    request_headers    json,
    request_parameters varchar(255),
    request_uuid       varchar(40)                 not null,
    response_content   json,
    response_dto       varchar(50),
    response_headers   json,
    primary key (id)
);

create table studio
(
    created_at timestamp(6) with time zone not null,
    id         bigint generated by default as identity,
    updated_at timestamp(6) with time zone not null,
    name       varchar(150)                not null,
    primary key (id)
);

create table sys_user
(
    created_at timestamp(6) with time zone not null,
    id         bigint generated by default as identity,
    updated_at timestamp(6) with time zone not null,
    name       varchar(100)                not null,
    user_name  varchar(100)                not null,
    primary key (id)
);

alter table if exists movie_award
    add constraint fk_movie_award_movie_id
    foreign key (movie_id)
    references movie;

alter table if exists movie_producer
    add constraint fk_movie_producer_producer_id
    foreign key (producer_id)
    references producer;

alter table if exists movie_producer
    add constraint fk_movie_producer_movie_id
    foreign key (movie_id)
    references movie;

alter table if exists movie_studio
    add constraint fk_movie_studio_studio_id
    foreign key (studio_id)
    references studio;

alter table if exists movie_studio
    add constraint fk_movie_studio_movie_id
    foreign key (movie_id)
    references movie;

alter table if exists persistence_log
    add constraint fk_persistence_log_user_id
    foreign key (user_id)
    references sys_user;

alter table if exists request_log
    add constraint fk_request_log_user_id
    foreign key (user_id)
    references sys_user;